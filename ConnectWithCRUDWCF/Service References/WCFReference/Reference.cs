//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConnectWithCRUDWCF.WCFReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Product", Namespace="")]
    [System.SerializableAttribute()]
    public partial class Product : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int productIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string productNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal productPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int productQuantityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int productId {
            get {
                return this.productIdField;
            }
            set {
                if ((this.productIdField.Equals(value) != true)) {
                    this.productIdField = value;
                    this.RaisePropertyChanged("productId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string productName {
            get {
                return this.productNameField;
            }
            set {
                if ((object.ReferenceEquals(this.productNameField, value) != true)) {
                    this.productNameField = value;
                    this.RaisePropertyChanged("productName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal productPrice {
            get {
                return this.productPriceField;
            }
            set {
                if ((this.productPriceField.Equals(value) != true)) {
                    this.productPriceField = value;
                    this.RaisePropertyChanged("productPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int productQuantity {
            get {
                return this.productQuantityField;
            }
            set {
                if ((this.productQuantityField.Equals(value) != true)) {
                    this.productQuantityField = value;
                    this.RaisePropertyChanged("productQuantity");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WCFReference.IProductService")]
    public interface IProductService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/SelectAllProducts", ReplyAction="http://tempuri.org/IProductService/SelectAllProductsResponse")]
        ConnectWithCRUDWCF.WCFReference.Product[] SelectAllProducts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/SelectAllProducts", ReplyAction="http://tempuri.org/IProductService/SelectAllProductsResponse")]
        System.Threading.Tasks.Task<ConnectWithCRUDWCF.WCFReference.Product[]> SelectAllProductsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/SearchProducts", ReplyAction="http://tempuri.org/IProductService/SearchProductsResponse")]
        ConnectWithCRUDWCF.WCFReference.Product[] SearchProducts(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/SearchProducts", ReplyAction="http://tempuri.org/IProductService/SearchProductsResponse")]
        System.Threading.Tasks.Task<ConnectWithCRUDWCF.WCFReference.Product[]> SearchProductsAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/AddProducts", ReplyAction="http://tempuri.org/IProductService/AddProductsResponse")]
        bool AddProducts(ConnectWithCRUDWCF.WCFReference.Product pd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/AddProducts", ReplyAction="http://tempuri.org/IProductService/AddProductsResponse")]
        System.Threading.Tasks.Task<bool> AddProductsAsync(ConnectWithCRUDWCF.WCFReference.Product pd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/EditProducts", ReplyAction="http://tempuri.org/IProductService/EditProductsResponse")]
        bool EditProducts(ConnectWithCRUDWCF.WCFReference.Product pd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/EditProducts", ReplyAction="http://tempuri.org/IProductService/EditProductsResponse")]
        System.Threading.Tasks.Task<bool> EditProductsAsync(ConnectWithCRUDWCF.WCFReference.Product pd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/DeleteProducts", ReplyAction="http://tempuri.org/IProductService/DeleteProductsResponse")]
        bool DeleteProducts(ConnectWithCRUDWCF.WCFReference.Product pd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/DeleteProducts", ReplyAction="http://tempuri.org/IProductService/DeleteProductsResponse")]
        System.Threading.Tasks.Task<bool> DeleteProductsAsync(ConnectWithCRUDWCF.WCFReference.Product pd);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProductServiceChannel : ConnectWithCRUDWCF.WCFReference.IProductService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProductServiceClient : System.ServiceModel.ClientBase<ConnectWithCRUDWCF.WCFReference.IProductService>, ConnectWithCRUDWCF.WCFReference.IProductService {
        
        public ProductServiceClient() {
        }
        
        public ProductServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProductServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ConnectWithCRUDWCF.WCFReference.Product[] SelectAllProducts() {
            return base.Channel.SelectAllProducts();
        }
        
        public System.Threading.Tasks.Task<ConnectWithCRUDWCF.WCFReference.Product[]> SelectAllProductsAsync() {
            return base.Channel.SelectAllProductsAsync();
        }
        
        public ConnectWithCRUDWCF.WCFReference.Product[] SearchProducts(int id) {
            return base.Channel.SearchProducts(id);
        }
        
        public System.Threading.Tasks.Task<ConnectWithCRUDWCF.WCFReference.Product[]> SearchProductsAsync(int id) {
            return base.Channel.SearchProductsAsync(id);
        }
        
        public bool AddProducts(ConnectWithCRUDWCF.WCFReference.Product pd) {
            return base.Channel.AddProducts(pd);
        }
        
        public System.Threading.Tasks.Task<bool> AddProductsAsync(ConnectWithCRUDWCF.WCFReference.Product pd) {
            return base.Channel.AddProductsAsync(pd);
        }
        
        public bool EditProducts(ConnectWithCRUDWCF.WCFReference.Product pd) {
            return base.Channel.EditProducts(pd);
        }
        
        public System.Threading.Tasks.Task<bool> EditProductsAsync(ConnectWithCRUDWCF.WCFReference.Product pd) {
            return base.Channel.EditProductsAsync(pd);
        }
        
        public bool DeleteProducts(ConnectWithCRUDWCF.WCFReference.Product pd) {
            return base.Channel.DeleteProducts(pd);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteProductsAsync(ConnectWithCRUDWCF.WCFReference.Product pd) {
            return base.Channel.DeleteProductsAsync(pd);
        }
    }
}
